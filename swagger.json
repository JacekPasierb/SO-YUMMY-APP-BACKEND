{
  "openapi": "3.0.0",
  "info": {
    "title": "SO Yummy App API docs",
    "description": "The API for the So Yummy project",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "Development server"
    },
    {
      "url": "https://so-yummy-app-backend.vercel.app/",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    }
  ],
  "components": {
    "schemas": {
      "Token": {
        "type": "string",
        "description": "JWT token",
        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MmMxODQyM2NhZmFjMGVkNGYyMDYyZiIsImlhdCI6MTY4MDYyMDc1MCwiZXhwIjoxNjgwNzA3MTUwfQ.vpfUcfAEnlEXa_lpbtmfmk8leV2UAgIimyKr8FUssQM"
      },
      "Email": {
        "type": "string",
        "description": "User's email",
        "format": "email",
        "example": "jankowalski@test.net"
      },
      "Name": {
        "minLength": 3,
        "type": "string",
        "description": "User's name",
        "example": "Jan"
      },
      "Avatar": {
        "type": "string",
        "description": "Url to the user's avatar",
        "format": "uri",
        "example": "https://res.cloudinary.com/db5awxaxs/image/upload/v1680438156/cld-sample-4.jpg"
      },
      "RegisterCredentials": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Jan"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "jankowalski@test.net"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "1234567"
          }
        }
      },
      "SigninCredentials": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "jankowalski@test.net"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "1234567"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "response status",
            "example": "OK"
          },
          "code": {
            "type": "string",
            "description": "response code",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "response message",
            "example": "Successfull"
          },
          "data": {
            "token": {
              "$ref": "#/components/schemas/Token"
            },
            "email": {
              "$ref": "#/components/schemas/Email"
            },
            "name": {
              "$ref": "#/components/schemas/Name"
            },
            "avatar": {
              "$ref": "#/components/schemas/Avatar"
            }
          }
        }
      },
      "CreatedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "response status",
            "example": "Created"
          },
          "code": {
            "type": "string",
            "description": "response code",
            "example": "201"
          },
          "message": {
            "type": "string",
            "description": "responses message",
            "example": "Register Success !"
          },
          "data": {
            "type": "object",
            "description": "responses data",
            "properties": {
              "token": {
                "$ref": "#/components/schemas/Token"
              },
              "email": {
                "$ref": "#/components/schemas/Email"
              },
              "name": {
                "$ref": "#/components/schemas/Name"
              }
            }
          }
        }
      },
      "BadRequestError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "response status",
            "example": "Bad Request"
          },
          "code": {
            "type": "string",
            "description": "response code",
            "example": "400"
          },
          "message": {
            "type": "string",
            "description": "response message",
            "example": "Input data validation error"
          }
        }
      },
      "UnauthorizedError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "response status",
            "example": "Unauthorized"
          },
          "code": {
            "type": "string",
            "description": "response code",
            "example": "401"
          },
          "message": {
            "type": "string",
            "description": "response message",
            "example": "Unauthorized"
          }
        }
      },
      "ForbiddenError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "response status",
            "example": "Forbidden"
          },
          "code": {
            "type": "string",
            "description": "response code",
            "example": "403"
          },
          "message": {
            "type": "string",
            "description": "response message",
            "example": "Forbidden"
          }
        }
      },
      "NotFoundError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "response status",
            "example": "Not found"
          },
          "code": {
            "type": "string",
            "description": "response code",
            "example": "404"
          },
          "message": {
            "type": "string",
            "description": "response message",
            "example": "Not found"
          }
        }
      },
      "ConflictError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Conflict",
            "example": "Conflict"
          },
          "code": {
            "type": "string",
            "description": "response code",
            "example": "409"
          },
          "message": {
            "type": "string",
            "description": "response message",
            "example": "Email is already in use"
          }
        }
      },
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "response status",
          "example": "Internal server error"
        },
        "code": {
          "type": "string",
          "description": "response code",
          "example": "500"
        },
        "message": {
          "type": "string",
          "description": "response message",
          "example": "Internal server error"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter JWT Bearer token"
      }
    }
  },
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "description": "Registration's object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCredentials"
              },
              "example": {
                "name": "Jan",
                "email": "jankowalski@test.net",
                "password": "12345678"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successfull",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/verify/:verificationToken": {
      "patch": {
        "tags": ["Auth"],
        "summary": "User verification email",
        "parameters": [
          {
            "in": "path",
            "required": "true",
            "name": "verificationToken",
            "description": "User's verify token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "response": {
          "200": {
            "description": "User success verification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "VerificationToken not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User signin",
        "requestBody": {
          "description": "Signin's object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninCredentials"
              },
              "example": {
                "email": "jankowalski@test.net",
                "password": "12345678"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User succesfully signed in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Email or Password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "403": {
            "description": "Email is not verified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForbiddenError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get user data",
        "parameters": [
          {
            "in": "header",
            "required": "true",
            "name": "token",
            "description": "User's token",
            "schema": {
              "$ref": "#/components/schemas/Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401":{
            "description":"Unauthorized",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/UnauthorizedError"
                }
              }
            }
          }
        }
      }
    }
  }
}
